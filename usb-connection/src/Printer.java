import lejos.nxt.*;
import lejos.nxt.comm.Bluetooth;
import lejos.nxt.comm.NXTConnection;
import lejos.nxt.comm.USB;
import lejos.nxt.rcxcomm.PacketHandler;

import java.io.DataInputStream;
import java.io.IOException;

public class Printer {
    private static final int PEN_MOVE = 74; //75
    private static final int PAPER_LENGTH = 1800;
    private static final int PAPER_WIDTH = 1550;

    private static final double factor = 0.07;

    private static final int SEGMENT_HORZ = 100;
    private static final int SEGMENT_VERT = 80;

    NXTRegulatedMotor slideMotor = Motor.B;
    NXTRegulatedMotor paperFeedMotor = Motor.A;
    NXTRegulatedMotor penMotor = Motor.C;

    TouchSensor slideSensor = new TouchSensor(SensorPort.S1);
    ColorSensor paperSensor = new ColorSensor(SensorPort.S3);

    public int[][] arc = {
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
            {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
            {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
            {0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
            {0,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0},
            {0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0},
            {0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0},
            {0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0},
            {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0},
            {0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0},
            {0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0},
            {0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
            {0,1,0,1,0,1,1,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,1,1,0,1,0,1,0},
            {0,1,0,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,1,1,0,1,0,0},
            {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
            {0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0},
            {0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0},
            {0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0},
            {0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0},
            {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0},
            {0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
            {0,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0},
            {0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
            {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
    };
    public int[][] mario = {
            {0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0},
            {0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1},
            {0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1},
            {0,0,0,1,0,0,0,1,1,1,1,1,1,0,0,1},
            {0,0,1,0,0,0,1,1,1,1,1,1,1,1,0,1},
            {0,0,1,0,1,1,0,0,0,0,0,0,1,1,1,0},
            {0,1,1,1,1,0,0,0,1,0,1,0,1,0,0,1},
            {0,1,0,1,1,0,0,0,1,0,1,0,1,0,0,1},
            {1,0,0,1,1,1,0,0,0,0,0,0,0,1,0,1},
            {1,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1},
            {0,1,0,0,0,0,1,1,1,1,0,0,1,1,1,0},
            {0,0,1,1,0,0,0,0,1,1,1,1,1,0,1,0},
            {0,0,0,1,1,1,0,0,0,0,0,1,0,0,1,0},
            {0,0,1,0,0,1,1,1,1,1,1,1,0,1,0,0},
            {0,1,0,0,0,0,1,1,0,0,0,1,1,0,0,0},
            {1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0},
            {1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0},
            {1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0},
            {0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0},
            {0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1},
            {0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,1},
            {1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1},
            {1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1},
            {1,0,0,1,1,1,1,1,0,0,0,1,0,0,1,1},
            {1,0,0,1,1,0,0,0,0,0,0,0,1,1,1,0},
            {0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0}
    };
    public int[][] bike = {
            {0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0},
            {0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,0,0,0},
            {0,0,1,0,0,0,0,1,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0,0},
            {0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0},
            {1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1},
            {1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1},
            {1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1},
            {0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0},
            {0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0},
            {0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0}
    };


    public void run() {
        System.out.println("Start");
        try {
            NXTConnection connection = USB.waitForConnection();

            DataInputStream datainputStream = connection.openDataInputStream();
            int receivedInt = -1;

            receivedInt = datainputStream.readInt();

            System.out.println(receivedInt);
            //LCD.drawInt(receivedInt, 10, 10);
        } catch (IOException e ) {
            System.out.println(" write error "+e);
            LCD.drawString(e.getMessage(), 5, 5);
        } catch (Exception e) {
            System.out.println(" write error "+e);
            LCD.drawString(e.getMessage(), 5, 5);
        }

        sleep(10000);


//        paperSensor.setFloodlight(true);
//
//        sleep(100);
//
//        //while(true) {
//        resetHorizontal();
//        loadPaper();
//        initPen();
//
//        int picture[][]  = null;
//
//        System.out.println("< Mario");
//        System.out.println("> Bike");
//
//        while(picture == null) {
//
//            while(true) {
//                if(Button.readButtons() == Button.ID_LEFT) {
//                    picture = mario;
//                    break;
//                } else if(Button.readButtons() == Button.ID_RIGHT) {
//                    picture = bike;
//                    break;
//                }
//            }
//        }
//
//        up(5);
//        right(5);
//        for(int r = 0; r < picture.length; r++) {
//            for(int c = 0; c < picture[r].length; c++) {
//                if(picture[r][c] == 1) {
//                    penDown();
//                    penUp();
//
//                }
//
//                right(factor);
//
//                if(Button.readButtons() != 0) { return; }
//            }
//
//            resetHorizontal();
//            right(5);
//            up(factor);
//        }
//
//        picture = null;
//        resetPen();
//        //}
    }

    public int skip(int[] line, int start) {
        //start++;
        int x = 1;
        while(start < line.length && line[start] == 0) {
            x++;

            start++;
        }

        return x;
    }

    // ==========================================
    // CONTROLS
    // ==========================================
    private void right(double i) {
        slideHead((int)(SEGMENT_HORZ * i));
    }

    private void left(double i) {
        slideHead(-1 * (int)(SEGMENT_HORZ * i));
    }

    private void up(double i) {
        feedPaper((int)(SEGMENT_VERT * i));
    }

    private void down(double i) {
        feedPaper(-1 * (int)(SEGMENT_VERT * i));
    }

    private void feedPaper(int length) {
        paperFeedMotor.rotate(length);
    }

    private void slideHead(int length) {
        slideMotor.rotate(length);
    }

    // Get paper to start position
    private void loadPaper() {
        paperFeedMotor.forward();
        while(paperSensor.getLightValue() > 20) { sleep(1); }
        paperFeedMotor.stop();
    }

    // Move to left
    private void resetHorizontal() {
        slideMotor.backward();
        while(!slideSensor.isPressed()){ sleep(1); }
        slideMotor.stop();

        slideMotor.rotate(50);
    }

    private void initPen() {
        penMotor.rotate(-1 * (PEN_MOVE - 20));
    }

    private void resetPen() {
        penMotor.rotate((PEN_MOVE - 20));
    }

    private void penDown() {
        penMotor.rotate(-20);
    }

    private void penUp() {
        penMotor.rotate(20);
    }

    private void sleep(long milli) {
        try {
            Thread.sleep(milli);
        } catch(Exception ex) {

        }
    }


    public static void main(String[] args) {
        new Printer().run();
    }
}